package com.aarrelaakso.drawl

import spock.lang.Specification
import org.apache.commons.lang3.StringUtils

class DrawingTest extends Specification {
    void setup() {
    }

    void cleanup() {
    }

    def "Adding a circle to an empty drawing gives the drawing a size of 1"() {
        when:
            Drawing drawing = new Drawing()
            Circle circle = new Circle()
            drawing.add(circle)
        then:
            drawing.size() == new Integer(1)
    }

    def "Calling getSVG without parameters throws an exception"() {
        when:
            Drawing drawing = new Drawing()
            def svg = drawing.getSVG()
        then:
            def exception = thrown(java.lang.NullPointerException)
    }

    def "If a circle is the only content of a drawing, then it is as large as possible"() {
        when:
            Drawing drawing = new Drawing()
            Circle circle = new Circle()
            drawing.add(circle)
            def svg = drawing.getSVG(100,100)
        then:
        svg.contains("circle r=\"50\"")
    }

    def "The SVG generated by a drawing contains the string 'svg'"() {
        when:
            Drawing drawing = new Drawing()
            def svg = drawing.getSVG(100,100)
        then:
            svg.indexOf("svg") > -1
    }

    def "The SVG generated by a drawing contains the width and height"() {
        when:
            Drawing drawing = new Drawing()
            def svg = drawing.getSVG(100,100)
        then:
            svg.indexOf("width=\"100\"") > -1
            svg.indexOf("height=\"100\"") > -1
    }

    def "The SVG generated by a drawing with a circle contains the string 'circle'"() {
        when:
            Drawing drawing = new Drawing()
            int radius = 4000
            Circle circle = new Circle(radius)
            drawing.add(circle)
        then:
            def svg = drawing.getSVG(100,100)
            svg.indexOf("circle") > -1
    }

    def "The SVG generated by a drawing with a Circle is exactly as expected"() {
        when:
        Drawing drawing = new Drawing()
        Circle circle = new Circle()
        drawing.add(circle)
        String svg = drawing.getSVG(100,100)

        then:
        svg == "<svg width=\"100\" height=\"100\"><circle r=\"50\" cx=\"50\" cy=\"50\" /></svg>"
    }

    def "The SVG generated by a drawing without a circle does not contain the string 'circle'"() {
        when:
            Drawing drawing = new Drawing()
        then:
            def svg = drawing.getSVG(100,100)
            svg.indexOf("circle") < 0
    }

    def "You can add two Circles to a drawing"() {
        when:
        Drawing drawing = new Drawing()
        Circle circle1 = new Circle()
        Circle circle2 = new Circle()
        drawing.add(circle1)
        drawing.add(circle2)
        String svg = drawing.getSVG(100, 100)
        int count = StringUtils.countMatches(svg, "circle")

        then:
        count == 2
    }

    def "When you add two Circles to a drawing, the drawing is twice as wide"() {
        when:
        Drawing drawing = new Drawing()
        Circle circle1 = new Circle()
        Circle circle2 = new Circle()
        drawing.add(circle1)
        drawing.add(circle2)

        then:
        drawing.getImplicitWidth() == new Double(2.0)
    }

    def "When you add two Circles to a drawing, the drawing is still twice as wide after you get the SVG"() {
        when:
        Drawing drawing = new Drawing()
        Circle circle1 = new Circle()
        Circle circle2 = new Circle()
        drawing.add(circle1)
        drawing.add(circle2)

        then:
        drawing.getImplicitWidth() == new Double(2.0)

        when:
        String svg = drawing.getSVG(100, 100)
        int count = StringUtils.countMatches(svg, "circle")

        then:
        drawing.getImplicitWidth() == new Double(2.0)
    }

    def "When you get SVG twice from a Drawing, it is the same both times"() {
        when:
        Drawing drawing = new Drawing()
        Circle circle1 = new Circle()
        Circle circle2 = new Circle()
        drawing.add(circle1)
        drawing.add(circle2)
        String svg1 = drawing.getSVG(100, 100)
        String svg2 = drawing.getSVG(100, 100)

        then:
        svg1 == svg2
    }

    def "When you construct a wide canvas, a circle fills its height"() {
        when:
        Drawing drawing = new Drawing()
        Circle circle = new Circle()
        drawing.add(circle)
        String svg = drawing.getSVG(200,100)

        then:
        svg.contains("circle r=\"50\"")
    }

    def "When you construct a tall canvas, a circle fills its width"() {
        when:
        Drawing drawing = new Drawing()
        Circle circle = new Circle()
        drawing.add(circle)
        String svg = drawing.getSVG(100,200)

        then:
        svg.contains("circle r=\"50\"")
    }

    def "When you place a Circle with an implicit position, the SVG contains a concrete position"() {
        when:
        Drawing drawing = new Drawing()
        Circle circle = new Circle()
        drawing.add(circle)
        String svg = drawing.getSVG(100,100)

        then:
        svg.contains("circle r=\"50\" cx=\"50\" cy=\"50\"")
    }

    def "You can set and get the explicit width of a Drawing"() {
        when:
        Drawing drawing = new Drawing()
        Circle circle = new Circle()
        drawing.add(circle)
        drawing.setExplicitWidth(100)
        Integer explicitWidth = drawing.getExplicitWidth()

        then:
        explicitWidth == 100
    }

    def "You can get the explicit width per object for a drawing with one Circle"() {
        when:
        Circle circle = new Circle()
        Drawing drawing = new Drawing()
        drawing.add(circle)
        drawing.setExplicitWidth(100)
        drawing.setExplicitHeight(100)
        Integer explicitWidthPerObject = drawing.getExplicitWidthPerObject();

        then:
        explicitWidthPerObject == 100
    }

    def "You can get the explicit width per object for a drawing with two Circles"() {
        when:
        Circle circle1 = new Circle()
        Circle circle2 = new Circle()
        circle2.rightOf(circle1)
        Drawing drawing = new Drawing()
        drawing.add(circle1)
        drawing.add(circle2)
        drawing.setExplicitWidth(100)
        drawing.setExplicitHeight(100)
        Integer explicitWidthPerObject = drawing.getExplicitWidthPerObject();

        then:
        explicitWidthPerObject == 50
    }

    def "You can get the implicit width of a drawing with two objects"() {
        when:
        Circle circle1 = new Circle()
        Circle circle2 = new Circle()
        circle2.rightOf(circle1)
        Drawing drawing = new Drawing()
        drawing.add(circle1)
        drawing.add(circle2)
        Double implicitWidth = new Double(drawing.getImplicitWidth());

        then:
        implicitWidth == 2.0
    }

    def "When a drawing has one circle, the explicit width per object is the explicit width of the drawing"() {
        when:
        Circle circle = new Circle()
        Drawing drawing = new Drawing()
        drawing.add(circle)
        drawing.setExplicitWidth(100)
        drawing.setExplicitHeight(100)
        Integer widthPerObject = drawing.getExplicitWidthPerObject()

        then:
        widthPerObject == 100
    }

    def "When you set the position of one circle relative to another, they are placed accordingly in the SVG"() {
        when:
        Circle circle1 = new Circle()
        Circle circle2 = new Circle()
        circle2.rightOf(circle1)
        Drawing drawing = new Drawing()
        drawing.add(circle1)
        drawing.add(circle2)
        String svg = drawing.getSVG(200,100)

        then:
        svg.contains("circle r=\"50\" cx=\"50\" cy=\"50\"")
        svg.contains("circle r=\"50\" cx=\"150\" cy=\"50\"")
    }


}
