package com.aarrelaakso.drawl

import spock.lang.Specification

class DrawingTest extends Specification {
    void setup() {
    }

    void cleanup() {
    }

    def "Adding a circle to an empty drawing gives the drawing a size of 1"() {
        when:
            Drawing drawing = new Drawing()
            Circle circle = new Circle()
            drawing.add(circle)
        then:
            drawing.size() == new Integer(1)
    }

    def "Calling getSVG without parameters throws an exception"() {
        when:
            Drawing drawing = new Drawing()
            def svg = drawing.getSVG()
        then:
            def exception = thrown(groovy.lang.MissingMethodException)
    }

    def "If a circle is the only content of a drawing, then it is as large as possible"() {
        when:
            Drawing drawing = new Drawing()
            Circle circle = new Circle()
            drawing.add(circle)
            def svg = drawing.getSVG(100,100)
        then:
            svg.indexOf("r=\"100\"") > -1
    }

    def "The SVG generated by a drawing contains the string 'svg'"() {
        when:
            Drawing drawing = new Drawing()
            def svg = drawing.getSVG(100,100)
        then:
            svg.indexOf("svg") > -1
    }

    def "The SVG generated by a drawing contains the width and height"() {
        when:
            Drawing drawing = new Drawing()
            def svg = drawing.getSVG(100,100)
        then:
            svg.indexOf("width=\"100\"") > -1
            svg.indexOf("height=\"100\"") > -1
    }

    def "The SVG generated by a drawing with a circle contains the string 'circle'"() {
        when:
            Drawing drawing = new Drawing()
            int radius = 4000
            Circle circle = new Circle(radius)
            drawing.add(circle)
        then:
            def svg = drawing.getSVG(100,100)
            svg.indexOf("circle") > -1
    }

    def "The SVG generated by a drawing without a circle does not contain the string 'circle'"() {
        when:
            Drawing drawing = new Drawing()
        then:
            def svg = drawing.getSVG(100,100)
            svg.indexOf("circle") < 0
    }
}
